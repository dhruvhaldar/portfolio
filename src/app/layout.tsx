import "@/once-ui/styles/index.scss";import "@/once-ui/tokens/index.scss";import classNames from "classnames";import { Header, RouteGuard } from "@/components";import dynamic from "next/dynamic";import { baseURL, effects, style } from "@/app/resources";import { Source_Code_Pro } from "next/font/google";import { person, home } from "@/app/resources/content";import { Background, Column, Flex, ToastProvider } from "@/once-ui/components";const Footer = dynamic(() => import('@/components/Footer').then((mod) => mod.Footer),{ loading: () => <div>Loading Footer...</div> });export async function generateMetadata() {const title = home.title;const alt_title = 'Showcasing the Best Projects';const description = home.description;const ogImage = `https://${baseURL}/opengraph.jpg`;const pageUrl = `https://${baseURL}`;return {title,description,metadataBase: new URL(pageUrl),alternates: {canonical: pageUrl},icons: {icon: [{ url: '/favicon.ico', sizes: '48x48' },{ url: '/favicon-16x16.png', sizes: '16x16', type: 'image/png' },{ url: '/favicon-32x32.png', sizes: '32x32', type: 'image/png' },{ url: '/android-chrome-192x192.jpg', sizes: '192x192', type: 'image/jpeg' },{ url: '/android-chrome-512x512.jpg', sizes: '512x512', type: 'image/jpeg' },],shortcut: "/favicon.ico",apple: "/apple-icon.png",manifest: '/site.webmanifest',other: {rel: "apple-touch-icon",url: "/apple-touch-icon-precomposed.png",'msapplication-TileColor': '#da532c','theme-color': '#ffffff',},},openGraph: {title,description,type: "website",url: pageUrl,siteName: `${person.firstName}'s Portfolio (With Projects & Publications)`,locale: "en_US",images: [{url: ogImage,width: 1200,height: 630,alt: alt_title,},],},twitter: {card: "summary_large_image",title,description,images: [ogImage],},robots: {index: true,follow: true,googleBot: {index: true,follow: true,"max-video-preview": -1,"max-image-preview": "large","max-snippet": -1,},},};}const primary = Source_Code_Pro({variable: "--font-primary",subsets: ["latin"],display: "swap",});type FontConfig = {variable: string;};const secondary: FontConfig | undefined = undefined; const tertiary: FontConfig | undefined = undefined;const code = primary;interface RootLayoutProps {children: React.ReactNode;}export default async function RootLayout({ children }: RootLayoutProps) {return (<Flex as="html" lang="en" background="page" data-neutral={style.neutral} data-brand={style.brand} data-accent={style.accent} data-solid={style.solid} data-solid-style={style.solidStyle} data-theme={style.theme} data-border={style.border} data-surface={style.surface} data-transition={style.transition} className={classNames(primary.variable,secondary ? secondary.variable : "",tertiary ? tertiary.variable : "",code.variable,)}><ToastProvider><Column style={{ minHeight: "100vh" }} as="body" fillWidth margin="0" padding="0"><Background mask={{cursor: effects.mask.cursor,x: effects.mask.x,y: effects.mask.y,radius: effects.mask.radius,}} gradient={{display: effects.gradient.display,x: effects.gradient.x,y: effects.gradient.y,width: effects.gradient.width,height: effects.gradient.height,tilt: effects.gradient.tilt,colorStart: effects.gradient.colorStart,colorEnd: effects.gradient.colorEnd,opacity: effects.gradient.opacity as | 0 | 10 | 20 | 30 | 40 | 50 | 60 | 70 | 80 | 90 | 100,}} dots={{display: effects.dots.display,color: effects.dots.color,size: effects.dots.size as any,opacity: effects.dots.opacity as any,}} grid={{display: effects.grid.display,color: effects.grid.color,width: effects.grid.width as any,height: effects.grid.height as any,opacity: effects.grid.opacity as any,}} lines={{display: effects.lines.display,opacity: effects.lines.opacity as any,}}/><Flex fillWidth minHeight="16"></Flex><Header /><Flex position="relative" zIndex={0} fillWidth paddingY="l" paddingX="l" horizontal="center" flex={1}><Flex horizontal="center" fillWidth minHeight="0"><RouteGuard>{children}</RouteGuard></Flex></Flex><Footer /></Column></ToastProvider></Flex>);}
